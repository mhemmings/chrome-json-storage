/**!
 * A lightweight storage adapter allowing the storage of objects
 *
 * @license MIT
 * @copyright  2015 Mark Hemmings
 * @author     Mark Hemmings
 **/
var JsonStorage=function(a){this.storageArea=a?"sync":"local"};JsonStorage.prototype.get=function(a,b){chrome.storage[this.storageArea].get(a,function(c){var d=c[a];return d?void b(JSON.parse(d)):void b(null)})},JsonStorage.prototype.set=function(a,b,c){var d=JSON.stringify(b),e={};e[a]=d,chrome.storage[this.storageArea].set(e,c)},JsonStorage.prototype.addOnChangeListener=function(a,b){var c=this;chrome.storage.onChanged.addListener(function(d,e){if(e===c.storageArea&&d[a]){var f=null;d[a].newValue&&(f=JSON.parse(d[a].newValue)),b(f)}})},JsonStorage.prototype.dump=function(a){chrome.storage[this.storageArea].get(function(b){for(var c in b)b[c]=JSON.parse(b[c]);a(b,JSON.stringify(b))})},JsonStorage.prototype.clear=function(a){chrome.storage[this.storageArea].clear(a)};